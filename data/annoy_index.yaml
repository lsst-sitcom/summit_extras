- !!python/tuple
  - System time (TAI).
  - ATBuilding_timestamp
- !!python/tuple
  - The timestamp of the loop control.
  - ATBuilding_loopTime
- !!python/tuple
  - Telemetry for auxtel vent extraction fan.
  - ATBuilding_extractionFan
- !!python/tuple
  - Telescope trajectory Position/Velocity/Time from the ATMCS trajectory generator
    at 100Hz, starting at the specified time.
  - ATMCS_trajectory
- !!python/tuple
  - Telemetry for elevation and azimuth encoders
  - ATMCS_mount_AzEl_Encoders
- !!python/tuple
  - Telemetry for Nasmyth encoders
  - ATMCS_mount_Nasmyth_Encoders
- !!python/tuple
  - Commanded torque for all drives except M3
  - ATMCS_torqueDemand
- !!python/tuple
  - Measured torque for all drives
  - ATMCS_measuredTorque
- !!python/tuple
  - Measured motor velocity for all drives
  - ATMCS_measuredMotorVelocity
- !!python/tuple
  - Position reported by Nasmyth and M3 mount encoders
  - ATMCS_nasmyth_m3_mountMotorEncoders
- !!python/tuple
  - Position reported by elevation and azimuth mount encoders
  - ATMCS_azEl_mountMotorEncoders
- !!python/tuple
  - Publish the system current timestamp.
  - ATMonochromator_timestamp
- !!python/tuple
  - Publish the system intenal loop time (e.g. time since start of operation).
  - ATMonochromator_loopTime
- !!python/tuple
  - Measured pressure in air line to M1 pneumatic actuators
  - ATPneumatics_m1AirPressure
- !!python/tuple
  - Measured pressure of airline to M2 pneumatic actuator (Hardware not functional,
    see DM-20577)
  - ATPneumatics_m2AirPressure
- !!python/tuple
  - Measured pressure in main supply line from compressor
  - ATPneumatics_mainAirSourcePressure
- !!python/tuple
  - Load cell value (from M1 hardpoint)
  - ATPneumatics_loadCell
- !!python/tuple
  - Calculated demands for current target
  - ATPtg_currentTargetStatus
- !!python/tuple
  - Guiding data
  - ATPtg_guiding
- !!python/tuple
  - Time related data
  - ATPtg_timeAndDate
- !!python/tuple
  - Current telescope mount status
  - ATPtg_mountStatus
- !!python/tuple
  - Information related to the Sun and the Moon
  - ATPtg_skyEnvironment
- !!python/tuple
  - Named telescope positions specified in the configuration file
  - ATPtg_namedAzEl
- !!python/tuple
  - Telemetry for mount positions in sky coordinate
  - ATPtg_mountPositions
- !!python/tuple
  - Chiller fan speeds, in revolutions per second
  - ATWhiteLight_chillerFanSpeeds
- !!python/tuple
  - Chiller set temperature and measured temperatures
  - ATWhiteLight_chillerTemperatures
- !!python/tuple
  - Chiller coolant flow rate
  - ATWhiteLight_chillerCoolantFlow
- !!python/tuple
  - Chiller thermo-electric cooler drive current
  - ATWhiteLight_chillerTECBankCurrents
- !!python/tuple
  - Chiller thermo-electric cooler drive status
  - ATWhiteLight_chillerTECDrive
- !!python/tuple
  - The status array of the CBP.
  - CBP_status
- !!python/tuple
  - The mask of the CBP.
  - CBP_mask
- !!python/tuple
  - The azimuth of the CBP.
  - CBP_azimuth
- !!python/tuple
  - The elevation of the CBP.
  - CBP_elevation
- !!python/tuple
  - The focus of the CBP.
  - CBP_focus
- !!python/tuple
  - Is the CBP parked?
  - CBP_parked
- !!python/tuple
  - Sky status
  - DIMM_sky
- !!python/tuple
  - Meterology data
  - DIMM_meterology
- !!python/tuple
  - DIMM status data
  - DIMM_status
- !!python/tuple
  - Ambient environment measured in various locations within DREAM. Indexed by location
    - 0 Dome, 1 Electronics Box, 2 Enclosure.
  - DREAM_environment
- !!python/tuple
  - DREAM power supply status.
  - DREAM_powerSupply
- !!python/tuple
  - DREAM dome telemetry.
  - DREAM_dome
- !!python/tuple
  - DREAM UPS telemetry.
  - DREAM_ups
- !!python/tuple
  - Timestamp (TAI).
  - EAS_timestamp
- !!python/tuple
  - Loop time..
  - EAS_loopTime
- !!python/tuple
  - Telemetry for Netbooter PDU devices.
  - EPM_pdu
- !!python/tuple
  - Telemetry for Scheider PM5XXX devices.
  - EPM_scheiderPm5xxx
- !!python/tuple
  - Telemetry for XUPS devices.
  - EPM_xups
- !!python/tuple
  - Air turbulence measured by a 3-dimensional anemometer. The reported values are
    computed from data that is accumulated over a configurable period that is typically
    on the order of a minute.
  - ESS_airTurbulence
- !!python/tuple
  - Wind speed and direction. The reported values are computed from data that is accumulated
    over a configurable period that is typically on the order of a minute.
  - ESS_airFlow
- !!python/tuple
  - Dew point.
  - ESS_dewPoint
- !!python/tuple
  - Pressure sensors with up to 8 channels.
  - ESS_pressure
- !!python/tuple
  - Rate of rainfall.
  - ESS_rainRate
- !!python/tuple
  - Relative humidity.
  - ESS_relativeHumidity
- !!python/tuple
  - Rate of snowfall.
  - ESS_snowRate
- !!python/tuple
  - Solar radiation.
  - ESS_solarRadiation
- !!python/tuple
  - Temperature Sensors with up to 16 channels.
  - ESS_temperature
- !!python/tuple
  - Raw data from a 3-axis accelerometer.
  - ESS_accelerometer
- !!python/tuple
  - Acceleration PSD computed from a 3-axis accelerometer.
  - ESS_accelerometerPSD
- !!python/tuple
  - Electric field strength. The reported values are computed from data that is accumulated
    over a configurable period that is typically on the order of a second.
  - ESS_electricFieldStrength
- !!python/tuple
  - Lightning strike status (once per second). This is a summary of the lightning
    strikes detected.
  - ESS_lightningStrikeStatus
- !!python/tuple
  - Spectrum analyzer trace (once per second).
  - ESS_spectrumAnalyzer
- !!python/tuple
  - Earthquake broad band, high gain data.
  - ESS_earthquakeBroadBandHighGain
- !!python/tuple
  - Earthquake broad band, low gain data.
  - ESS_earthquakeBroadBandLowGain
- !!python/tuple
  - Earthquake high broad band, high gain data.
  - ESS_earthquakeHighBroadBandHighGain
- !!python/tuple
  - Earthquake high broad band, low gain data.
  - ESS_earthquakeHighBroadBandLowGain
- !!python/tuple
  - Earthquake long period, high gain data.
  - ESS_earthquakeLongPeriodHighGain
- !!python/tuple
  - Earthquake long period, low gain data.
  - ESS_earthquakeLongPeriodLowGain
- !!python/tuple
  - Earthquake ultra long period, high gain data.
  - ESS_earthquakeUltraLongPeriodHighGain
- !!python/tuple
  - Earthquake very long period, high gain data.
  - ESS_earthquakeVeryLongPeriodHighGain
- !!python/tuple
  - Telemetry for the bombaAguaFriaP01 device.
  - HVAC_bombaAguaFriaP01
- !!python/tuple
  - Telemetry for the chiller01P01 device.
  - HVAC_chiller01P01
- !!python/tuple
  - Telemetry for the chiller02P01 device.
  - HVAC_chiller02P01
- !!python/tuple
  - Telemetry for the chiller03P01 device.
  - HVAC_chiller03P01
- !!python/tuple
  - Telemetry for the generalP01 device.
  - HVAC_generalP01
- !!python/tuple
  - Telemetry for the glycolSensor device.
  - HVAC_glycolSensor
- !!python/tuple
  - Telemetry for the valvulaP01 device.
  - HVAC_valvulaP01
- !!python/tuple
  - Telemetry for the vea01P01 device.
  - HVAC_vea01P01
- !!python/tuple
  - Telemetry for the vec01P01 device.
  - HVAC_vec01P01
- !!python/tuple
  - Telemetry for the vin01P01 device.
  - HVAC_vin01P01
- !!python/tuple
  - Telemetry for the crack01P02 device.
  - HVAC_crack01P02
- !!python/tuple
  - Telemetry for the crack02P02 device.
  - HVAC_crack02P02
- !!python/tuple
  - Telemetry for the fancoil01P02 device.
  - HVAC_fancoil01P02
- !!python/tuple
  - Telemetry for the fancoil02P02 device.
  - HVAC_fancoil02P02
- !!python/tuple
  - Telemetry for the fancoil03P02 device.
  - HVAC_fancoil03P02
- !!python/tuple
  - Telemetry for the fancoil04P02 device.
  - HVAC_fancoil04P02
- !!python/tuple
  - Telemetry for the fancoil05P02 device.
  - HVAC_fancoil05P02
- !!python/tuple
  - Telemetry for the fancoil06P02 device.
  - HVAC_fancoil06P02
- !!python/tuple
  - Telemetry for the fancoil07P02 device.
  - HVAC_fancoil07P02
- !!python/tuple
  - Telemetry for the fancoil08P02 device.
  - HVAC_fancoil08P02
- !!python/tuple
  - Telemetry for the fancoil09P02 device.
  - HVAC_fancoil09P02
- !!python/tuple
  - Telemetry for the fancoil10P02 device.
  - HVAC_fancoil10P02
- !!python/tuple
  - Telemetry for the fancoil11P02 device.
  - HVAC_fancoil11P02
- !!python/tuple
  - Telemetry for the fancoil12P02 device.
  - HVAC_fancoil12P02
- !!python/tuple
  - Telemetry for the manejadoraSblancaP04 device.
  - HVAC_manejadoraSblancaP04
- !!python/tuple
  - Telemetry for the manejadoraSlimpiaP04 device.
  - HVAC_manejadoraSlimpiaP04
- !!python/tuple
  - Telemetry for the vex03LowerP04 device.
  - HVAC_vex03LowerP04
- !!python/tuple
  - Telemetry for the vex04CargaP04 device.
  - HVAC_vex04CargaP04
- !!python/tuple
  - Telemetry for the Dynalene device.
  - HVAC_dynaleneP05
- !!python/tuple
  - Telemetry for the manejadoraLower01P05 device.
  - HVAC_manejadoraLower01P05
- !!python/tuple
  - Telemetry for the manejadoraLower02P05 device.
  - HVAC_manejadoraLower02P05
- !!python/tuple
  - Telemetry for the manejadoraLower03P05 device.
  - HVAC_manejadoraLower03P05
- !!python/tuple
  - Telemetry for the manejadoraLower04P05 device.
  - HVAC_manejadoraLower04P05
- !!python/tuple
  - Telemetry for the vea01P05 device.
  - HVAC_vea01P05
- !!python/tuple
  - Telemetry for the vea08P05 device.
  - HVAC_vea08P05
- !!python/tuple
  - Telemetry for the vea09P05 device.
  - HVAC_vea09P05
- !!python/tuple
  - Telemetry for the vea10P05 device.
  - HVAC_vea10P05
- !!python/tuple
  - Telemetry for the vea11P05 device.
  - HVAC_vea11P05
- !!python/tuple
  - Telemetry for the vea12P05 device.
  - HVAC_vea12P05
- !!python/tuple
  - Telemetry for the vea13P05 device.
  - HVAC_vea13P05
- !!python/tuple
  - Telemetry for the vea14P05 device.
  - HVAC_vea14P05
- !!python/tuple
  - Telemetry for the vea15P05 device.
  - HVAC_vea15P05
- !!python/tuple
  - Telemetry for the vea16P05 device.
  - HVAC_vea16P05
- !!python/tuple
  - Telemetry for the vea17P05 device.
  - HVAC_vea17P05
- !!python/tuple
  - Measured M1M3 bending modes values.
  - MTAOS_m1m3BendingModes
- !!python/tuple
  - Measured M2 bending modes values.
  - MTAOS_m2BendingModes
- !!python/tuple
  - Status of the azimuth axis and drives.
  - MTDome_azimuth
- !!python/tuple
  - Status of the light/wind screen (elevation axis).
  - MTDome_lightWindScreen
- !!python/tuple
  - Status of the aperture shutter.
  - MTDome_apertureShutter
- !!python/tuple
  - Status of the louvers. The Louver enumeration describes the louver indices. Each
    louver has two drives and the drive indices for louver N are 2N and 2N+1.
  - MTDome_louvers
- !!python/tuple
  - Status of the global interlock system.
  - MTDome_interlocks
- !!python/tuple
  - Status of the thermal system.
  - MTDome_thermal
- !!python/tuple
  - Status of the rear access door.
  - MTDome_rearAccessDoor
- !!python/tuple
  - Status of the calibration screen hardware.
  - MTDome_calibrationScreen
- !!python/tuple
  - Hexapod actuators information.
  - MTHexapod_actuators
- !!python/tuple
  - Hexapod movement details of application.
  - MTHexapod_application
- !!python/tuple
  - Hexapod drive/electrical information.
  - MTHexapod_electrical
- !!python/tuple
  - Thermal status response data. Return of ILC command 89 (0x59).
  - MTM1M3TS_thermalData
- !!python/tuple
  - Mixing valve position.
  - MTM1M3TS_mixingValve
- !!python/tuple
  - Glycol loop temperature, measured by Thermal Sensors.
  - MTM1M3TS_glycolLoopTemperature
- !!python/tuple
  - Flow meter telemetry.
  - MTM1M3TS_flowMeter
- !!python/tuple
  - Telemetry from glycol pump.
  - MTM1M3TS_glycolPump
- !!python/tuple
  - Force actuator data - cylinder forces.
  - MTM1M3_forceActuatorData
- !!python/tuple
  - Inclinometer data - mirror inclination.
  - MTM1M3_inclinometerData
- !!python/tuple
  - Outer loop data - counters and execution time.
  - MTM1M3_outerLoopData
- !!python/tuple
  - DC accelerometer data - mirror cell acceleration.
  - MTM1M3_accelerometerData
- !!python/tuple
  - Hardpoint acctuator data - steps queued, current position and sensed forces.
  - MTM1M3_hardpointActuatorData
- !!python/tuple
  - IMS data - XYZ mirror position and rotation.
  - MTM1M3_imsData
- !!python/tuple
  - Reports mezzanine board pressure in push and pull cylinders. Pressure is read
    with ILC command 119.
  - MTM1M3_forceActuatorPressure
- !!python/tuple
  - Gyroscope data - mirror cell velocity.
  - MTM1M3_gyroData
- !!python/tuple
  - Power supplies currents.
  - MTM1M3_powerSupplyData
- !!python/tuple
  - Dorce Balance System PID data.
  - MTM1M3_pidData
- !!python/tuple
  - Hardpoint monitor data - LVDT displacement, pressures inside hardpoint cylinders.
  - MTM1M3_hardpointMonitorData
- !!python/tuple
  - Applied M1M3 azimuth forces.
  - MTM1M3_appliedAzimuthForces
- !!python/tuple
  - "Applied M1M3 acceleration forces. Those shall counteract mirror inertia\n   \
    \   as its acceleration is changing."
  - MTM1M3_appliedAccelerationForces
- !!python/tuple
  - "M1M3 applied balance forces. Those forces are calculated from the forces\n  \
    \    sensed on top of the hardopoints, and shall remove force excess from the\n\
    \      hardpoints."
  - MTM1M3_appliedBalanceForces
- !!python/tuple
  - Forces applied to the Force Actuator cylinders. Those are the forces the control
    system sends to actuators.
  - MTM1M3_appliedCylinderForces
- !!python/tuple
  - Applied gravity distribution / elevation forces. Those shall change as mirror
    changes its inclination.
  - MTM1M3_appliedElevationForces
- !!python/tuple
  - "Total applied forces in XYZ space. See appliedCylinderForces for forces\n   \
    \   commanded to the force actuator cylinders.\\"
  - MTM1M3_appliedForces
- !!python/tuple
  - Forces calculated from measured mirror temperatures.
  - MTM1M3_appliedThermalForces
- !!python/tuple
  - Forces counteracting mirror inertia as the TMA slew to a new position.
  - MTM1M3_appliedVelocityForces
- !!python/tuple
  - M2 mirror's rigid body position. Measured from hardpoints.
  - MTM2_position
- !!python/tuple
  - M2 mirror's rigid body position measured by the independent measurement system
    (IMS).
  - MTM2_positionIMS
- !!python/tuple
  - Axial actuator forces data. Increasing force corresponds to increasing tension
    in the load cell. The elements are the actuator Ids from 1 to 72. The related
    ring Ids are B1-B30, C1-C24, and D1-D18.
  - MTM2_axialForce
- !!python/tuple
  - Tangent actuator forces data. Increasing force corresponds to increasing tension
    in the load cell. The elements are the actuator Ids from 73 to 78. The related
    ring Ids are A1-A6. The related degrees are 0, 60, 120, 180, 240, and 300.
  - MTM2_tangentForce
- !!python/tuple
  - Mirror and cell temperature sensor readings relative to the origin (offset).
  - MTM2_temperature
- !!python/tuple
  - M2 internal inclinometer reading transforms to the zenith angle.
  - MTM2_zenithAngle
- !!python/tuple
  - Received inclinometer angle from the telescope mount assembly (TMA). This topic
    is used to debug the look-up table (LUT) calculation if needed.
  - MTM2_inclinometerAngleTma
- !!python/tuple
  - Axial actuator stepper motor position in steps. Increasing step corresponds to
    counterclockwise rotation of the motor shaft, looking along the shaft in the direction
    of the motor. The elements are the actuator Ids from 1 to 72. The related ring
    Ids are B1-B30, C1-C24, and D1-D18.
  - MTM2_axialActuatorSteps
- !!python/tuple
  - Tangent actuator stepper motor position in steps. Increasing sign indicates extension
    towards the mirror. The elements are the actuator Ids from 73 to 78. The related
    ring Ids are A1-A6. The related degrees are 0, 60, 120, 180, 240, and 300.
  - MTM2_tangentActuatorSteps
- !!python/tuple
  - Axial actuator encoder position. The sign of the position is consistent with the
    optical coordinate system as per LTS-136. The elements are the actuator Ids from
    1 to 72. The related ring Ids are B1-B30, C1-C24, and D1-D18.
  - MTM2_axialEncoderPositions
- !!python/tuple
  - Tangent actuator encoder position. The sign of the position is consistent with
    the optical coordinate system as per LTS-136. The elements are the actuator Ids
    from 73 to 78. The related ring Ids are A1-A6. The related degrees are 0, 60,
    120, 180, 240, and 300.
  - MTM2_tangentEncoderPositions
- !!python/tuple
  - Inner-loop controller (ILC) data.
  - MTM2_ilcData
- !!python/tuple
  - Raw measurements from displacement sensors.
  - MTM2_displacementSensors
- !!python/tuple
  - Net forces and moments as commanded by the force balance system. These are calculated
    using the 72 axial and 6 tangent balance forces, which are a component of the
    total forces being commanded.
  - MTM2_forceBalance
- !!python/tuple
  - Total actuator net forces.
  - MTM2_netForcesTotal
- !!python/tuple
  - Total actuator net moments of force.
  - MTM2_netMomentsTotal
- !!python/tuple
  - Total voltage and current for motors and communication system of M2.
  - MTM2_powerStatus
- !!python/tuple
  - Raw total voltage and current for motors and communication system of M2.
  - MTM2_powerStatusRaw
- !!python/tuple
  - Tangential force error used to compare with the thresholds to avoid the breaking
    of mirror. A1 and A4 do not support the mirror. Only A2, A3, A5, and A6 do.
  - MTM2_forceErrorTangent
- !!python/tuple
  - Heartbeat output by the MTMount CSC's telemetry client (not the TMA).
  - MTMount_telemetryClientHeartbeat
- !!python/tuple
  - Azimuth axis detail
  - MTMount_azimuth
- !!python/tuple
  - Mount safety system
  - MTMount_safetySystem
- !!python/tuple
  - Elevation axis detail
  - MTMount_elevation
- !!python/tuple
  - Locking pins status
  - MTMount_lockingPins
- !!python/tuple
  - Deployable platforms status
  - MTMount_deployablePlatforms
- !!python/tuple
  - Cabinet 0101 Thermal status
  - MTMount_cabinet0101Thermal
- !!python/tuple
  - Azimuth cable wrap status
  - MTMount_azimuthCableWrap
- !!python/tuple
  - Camera cable wrap status
  - MTMount_cameraCableWrap
- !!python/tuple
  - Balncing detail
  - MTMount_balancing
- !!python/tuple
  - Azimuth drive currents
  - MTMount_azimuthDrives
- !!python/tuple
  - Azimuth drive temperatures
  - MTMount_azimuthDrivesThermal
- !!python/tuple
  - Elevation drive currents
  - MTMount_elevationDrives
- !!python/tuple
  - Elevation drive temperatures
  - MTMount_elevationDrivesThermal
- !!python/tuple
  - Encoders detail
  - MTMount_encoder
- !!python/tuple
  - Main cabinet temperatures
  - MTMount_mainCabinetThermal
- !!python/tuple
  - Mirror cover locks
  - MTMount_mirrorCoverLocks
- !!python/tuple
  - Mirror covers detail
  - MTMount_mirrorCover
- !!python/tuple
  - Main power supply detail
  - MTMount_mainPowerSupply
- !!python/tuple
  - Top end chiller detail
  - MTMount_topEndChiller
- !!python/tuple
  - Auxillary cabinets temperatures
  - MTMount_auxiliaryCabinetsThermal
- !!python/tuple
  - Oil supply system detail
  - MTMount_oilSupplySystem
- !!python/tuple
  - Compressed air detail
  - MTMount_compressedAir
- !!python/tuple
  - Cooling system detail
  - MTMount_cooling
- !!python/tuple
  - Dynalene cooling system detail
  - MTMount_dynaleneCooling
- !!python/tuple
  - Glycol cooling system detail
  - MTMount_generalPurposeGlycolWater
- !!python/tuple
  - Calculated demands for current target
  - MTPtg_currentTargetStatus
- !!python/tuple
  - Guiding data
  - MTPtg_guiding
- !!python/tuple
  - Time related data
  - MTPtg_timeAndDate
- !!python/tuple
  - Current telescope mount status
  - MTPtg_mountStatus
- !!python/tuple
  - Information related to the Sun and the Moon
  - MTPtg_skyEnvironment
- !!python/tuple
  - Named telescope positions specified in the configuration file
  - MTPtg_namedAzEl
- !!python/tuple
  - Telemetry for mount positions in sky coordinates
  - MTPtg_mountPosition
- !!python/tuple
  - Camera cable wrap following error.
  - MTRotator_ccwFollowingError
- !!python/tuple
  - Demand and actual rotator position and velocity.
  - MTRotator_rotation
- !!python/tuple
  - Rotator drive/electrical information.
  - MTRotator_electrical
- !!python/tuple
  - Data about the two rotator motors, in order A, B
  - MTRotator_motors
- !!python/tuple
  - VMS (1 sensor, 3 channels) accelerometer data.
  - MTVMS_data
- !!python/tuple
  - Acceleration power spectral density (PSD), measured by a 3 axis accelerometer.
  - MTVMS_psd
- !!python/tuple
  - Miscellaneous data.
  - MTVMS_miscellaneous
- !!python/tuple
  - Scalar values.
  - Test_scalars
- !!python/tuple
  - Array values.
  - Test_arrays
- !!python/tuple
  - The temperature sensors that are available from the laser. (deg_C)
  - TunableLaser_temperature
- !!python/tuple
  - The wavelength of the laser.
  - TunableLaser_wavelength
- !!python/tuple
  - The average temperature of the Omrom scanner for measuring the cooling performance
    of the laser.
  - TunableLaser_scannerTemperature
- !!python/tuple
  - The metadata for the forecast data.
  - WeatherForecast_metadata
- !!python/tuple
  - The hourly trend forecast data.
  - WeatherForecast_hourlyTrend
- !!python/tuple
  - The daily trend for the forecast.
  - WeatherForecast_dailyTrend
